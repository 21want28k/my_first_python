student={'Tom','Jim','Mary','Tom','Jack','Rose'}

print(student)#输出集合，重复的元祖自动被去掉

#成员测试
if('Rose' in student):
    print('Rose is a student')
else:
    print('Rose is not a student')

#进行集合运算
a=set('abcdefg')
b=set('adojopfg')

print(a)
print(a)

print(b-a)#差集运算

print(b|a)#并

print(b^a)#a和b中不同时存在的部分

print(b&a)#a和b的交集

#附上执行结果：
'''
第一次执行：

{'Jim', 'Rose', 'Mary', 'Jack', 'Tom'}
Rose is a student
{'b', 'd', 'c', 'g', 'f', 'e', 'a'}
{'b', 'd', 'c', 'g', 'f', 'e', 'a'}
{'j', 'p', 'o'}
{'b', 'e', 'p', 'g', 'd', 'c', 'f', 'o', 'j', 'a'}
{'b', 'o', 'e', 'p', 'j', 'c'}
{'g', 'f', 'd', 'a'}
'''

'''
第二次执行：
{'Mary', 'Jim', 'Rose', 'Tom', 'Jack'}
Rose is a student
{'g', 'c', 'b', 'e', 'a', 'd', 'f'}
{'g', 'c', 'b', 'e', 'a', 'd', 'f'}
{'o', 'j', 'p'}
{'g', 'c', 'p', 'b', 'e', 'j', 'o', 'd', 'a', 'f'}
{'b', 'e', 'o', 'j', 'c', 'p'}
{'a', 'g', 'd', 'f'}
'''

'''
我们可以发现set集合的无序性，不重复性是发挥的是淋漓尽致的，这点我觉得很精妙
执行一次这个程序它的输出和下一次执行时它的输出，集合里面的元素顺序是不一样的！
无序性得以体现。在精妙了！
'''
